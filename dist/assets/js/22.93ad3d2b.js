(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{272:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",[a("code",[t._v("Babel")]),t._v(" 是一个 "),a("code",[t._v("JavaScript")]),t._v(" 语言编辑器，平时我们主要用于将新标准的语法转换成为向后兼容的 "),a("code",[t._v("JavaScript")]),t._v(" 语法，以便能在运行在我们想要兼容的环境中。")])]),t._v(" "),a("p",[t._v("以上是 "),a("code",[t._v("Babel")]),t._v(" 的官方介绍，其实我们可以将其理解为一个加工机器。我们不关心机器内部的运行过程，只需要将我们的原料倒进机器中并开启按钮，便能生产出我们想要的产品来。 😏")]),t._v(" "),a("h2",{attrs:{id:"原理分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原理分析","aria-hidden":"true"}},[t._v("#")]),t._v(" 原理分析")]),t._v(" "),a("p",[t._v("在学习怎么编写 "),a("code",[t._v("Babel")]),t._v(" 的插件之前，了解它对我们的原料做了什么工作有助于为我们编写插件提供思路。疏于了解时对于我们来说宛如黑魔法，待我将其拆解开，你会发现一切都是有迹可循。")]),t._v(" "),a("h3",{attrs:{id:"babel-编译原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel-编译原理","aria-hidden":"true"}},[t._v("#")]),t._v(" Babel 编译原理 🎏")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-img-1252360401.cos.ap-guangzhou.myqcloud.com/20190923-1.jpg",alt:"齿轮"}})]),t._v(" "),a("p",[t._v("每个男孩可能都有那么一个梦想，将一个个零件通过自己的努力组装成为一台很酷的机器。拼什么机器不重要，只要酷就完事了。")]),t._v(" "),a("p",[t._v("那么我跟你说，"),a("code",[t._v("Babel")]),t._v(" 内部做的正是这一份拼装的工作，会不会觉得这个库做的东西其实一点都不枯燥，甚至还挺酷的呢。  😎")]),t._v(" "),a("p",[t._v("我们都知道，"),a("code",[t._v("Babel")]),t._v(" 帮我们做的是语法解析的工作，这项工作的前提是我们要能分析出完整的语法结构，接着才能进行对应的操作，那么大家对于分析语法结构有没有自己的做法呢？")]),t._v(" "),a("p",[a("code",[t._v("AST")]),t._v(" 是计算机科学中一种用于词法解析的方法，其全称为抽象语法树（Abstract Syntax Tree），从命名可以看出这是一种将我们的语法抽象成为树状结构的方法。")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",[a("code",[t._v("AST")]),t._v(" 不能完整表现真实语法的每个细节，完整表现的结构称为 "),a("code",[t._v("DST")])])]),t._v(" "),a("p",[t._v("我们的 "),a("code",[t._v("Babel")]),t._v(" 用的就是 "),a("code",[t._v("AST")]),t._v(" 的工具来分析和编辑我们的代码结构。这时候可能有人会问了，"),a("code",[t._v("AST")]),t._v(" 究竟是个什么东西啊？")]),t._v(" "),a("p",[t._v("别急，后面我们就来会一会这个宛如黑魔法一般的技能吧！ 👊")]),t._v(" "),a("h3",{attrs:{id:"ast-语法树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ast-语法树","aria-hidden":"true"}},[t._v("#")]),t._v(" AST 语法树 🎏")]),t._v(" "),a("p",[t._v("在开始讲述 "),a("code",[t._v("AST")]),t._v(" 之前，有一个工具我想要推荐给大家，通过这么一个工具就可以轻松的将 "),a("code",[t._v("AST")]),t._v(", 的结构可视化，然后再据此进行操作。")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://astexplorer.net/",target:"_blank",rel:"noopener noreferrer"}},[t._v("工具传送门"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("AST 的原则就是将我们的代码分成尽可能小的词法块，然后将其用树的形式组织起来。")]),t._v(" "),a("p",[t._v("通过 "),a("code",[t._v("AST")]),t._v(" 我们可以把我们的任意程序都抽象成一棵树的形式来表示，并且通过这颗树能生成与原代码一样的代码集合。")]),t._v(" "),a("p",[t._v("每一层结构在 "),a("code",[t._v("AST")]),t._v(" 中被称为"),a("code",[t._v("节点（Node）")]),t._v("，他们拥有着相似的结构，下面我们用一个简单的例子来验证一下。")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("div",{staticClass:"tip custom-block"},[a("p",[t._v("本例中拆解出的 "),a("code",[t._v("AST")]),t._v(" 以 "),a("code",[t._v("babylon7")]),t._v(" 拆解出的 "),a("code",[t._v("AST")]),t._v(" 为例")])]),t._v(" "),a("p",[t._v("这是个在 JavaScript 中简单的变量定义语法，我们先来对它进行简单的词法拆解。")]),t._v(" "),a("p",[t._v("这一句话我们可以将其拆成 "),a("code",[t._v("var")]),t._v("、 "),a("code",[t._v("a")]),t._v("、 "),a("code",[t._v("1")]),t._v(" 三个部分，画成图之后就变成了下面这样的结构：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-img-1252360401.cos.ap-guangzhou.myqcloud.com/20190923-2.png",alt:"AST结构1"}})]),t._v(" "),a("p",[t._v("可以看出来通过这么一个树形结构我们就把这么我们的代码给描述出来了，我们用上面提到的工具来验证一下我们生成出来的 AST 究竟是不是这样的吧 😏")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-img-1252360401.cos.ap-guangzhou.myqcloud.com/20190923-3png",alt:"AST结构2"}})]),t._v(" "),a("p",[t._v("可以看出来，解析出来的 "),a("code",[t._v("AST")]),t._v(" 跟我们拆解的基本一致，多出来的部分是对该词法的其他描述，用于定位语句位置以及其他标识工作。")]),t._v(" "),a("h3",{attrs:{id:"编译原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#编译原理","aria-hidden":"true"}},[t._v("#")]),t._v(" 编译原理 🎏")]),t._v(" "),a("p",[t._v("Babel 工作的基本流程如下：")]),t._v(" "),a("ul",[a("li",[t._v("⭐️ 解析（parse）")]),t._v(" "),a("li",[t._v("⭐️ 转换（transform）")]),t._v(" "),a("li",[t._v("⭐️ 生成（generate）")])]),t._v(" "),a("p",[t._v("虽然这一节的名称叫做编译原理，但并非教科书版本的编译原理。这里将给大家讲述通过 "),a("code",[t._v("AST")]),t._v(" 修改代码的基本思路以及基本流程。")]),t._v(" "),a("p",[t._v("思考下面一个例子，我们重新定义一个变量：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("这样我们就有了一个名字是 "),a("code",[t._v("b")]),t._v(" 的变量，比较生成的 "),a("code",[t._v("AST")]),t._v(" 树会发现变得只是定义的 "),a("code",[t._v("value")]),t._v(" 从 "),a("code",[t._v("a")]),t._v(" 变成了 "),a("code",[t._v("b")]),t._v("。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-img-1252360401.cos.ap-guangzhou.myqcloud.com/20190923-4.png",alt:"AST结构3"}})]),t._v(" "),a("p",[t._v("这样我们就有了编译的基础思路了，当我们想要把 "),a("code",[t._v("var a")]),t._v(" 转换成 "),a("code",[t._v("var b")]),t._v(", 那我们只需要在 "),a("code",[t._v("AST")]),t._v(" 树上找到对应的节点进行修改就行了。")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",[t._v("我们这里把具体修改的方法先放一放，只需要有这么一种修改 "),a("code",[t._v("AST")]),t._v(" 的意识即可。")])]),t._v(" "),a("p",[t._v("到了这里，我们已经能够进行简单的语法转换了。千里之行始于足下，再复杂的转换也是由这么一个小小的部分去组成的。")]),t._v(" "),a("p",[t._v("工具完备后怎么使用就八仙过海各显神通了。")]),t._v(" "),a("h2",{attrs:{id:"使用-babel-进行转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用-babel-进行转换","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用 Babel 进行转换")]),t._v(" "),a("p",[t._v("前面已经给大家介绍过了 "),a("code",[t._v("AST")]),t._v(" 的基本结构。对知识有了基础的概念之后我们可以开始着手编写我们的第一个插件了。")]),t._v(" "),a("h3",{attrs:{id:"babel-基本使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel-基本使用","aria-hidden":"true"}},[t._v("#")]),t._v(" Babel 基本使用 🎏")]),t._v(" "),a("p",[t._v("相信 "),a("code",[t._v("Babel")]),t._v(" 大家都使用过，现版本的 "),a("code",[t._v("Babel")]),t._v(" 生态已经足够的好，深度集成在了各个我们常用的插件平台中。")]),t._v(" "),a("p",[t._v("我们常用的 "),a("code",[t._v("vue-cli")]),t._v(" 和 "),a("code",[t._v("react-create-app")]),t._v(" 中的 "),a("code",[t._v("webpack")]),t._v(" 中已经为我们集成好了 "),a("code",[t._v("Babel")]),t._v(" 的相关配置，为我们带来了开箱即用的良好体验。")]),t._v(" "),a("p",[t._v("虽然其在我们的项目中真的很不起眼，但从项目运行的角度说可以说是有着举足轻重的地位。")]),t._v(" "),a("p",[t._v("不了解 "),a("code",[t._v("Babel")]),t._v(" 的同学可以先补补课 "),a("a",{attrs:{href:"https://www.babeljs.cn/docs/",target:"_blank",rel:"noopener noreferrer"}},[t._v(">>>传送门"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("code",[t._v("Babel")]),t._v(" 向外暴露出的配置接口我们可以通过配置项目中的 "),a("code",[t._v(".babelrc")]),t._v(" 文件进行配置，设置装载 "),a("code",[t._v("Babel")]),t._v(" 预装的环境以及第三方的插件。")]),t._v(" "),a("h3",{attrs:{id:"babel-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#babel-api","aria-hidden":"true"}},[t._v("#")]),t._v(" Babel API 🎏")]),t._v(" "),a("p",[t._v("之前已经介绍过，"),a("code",[t._v("Babel")]),t._v(" 编译的实质是将其转为 "),a("code",[t._v("AST")]),t._v(" 后对 "),a("code",[t._v("AST")]),t._v(" 上的节点进行相应的操作后再将操作完成的 "),a("code",[t._v("AST")]),t._v(" 重新编译成代码。")]),t._v(" "),a("p",[a("code",[t._v("Babel")]),t._v(" 内部为我们提供了几个内置库以简化我们的操作：")]),t._v(" "),a("ul",[a("li",[t._v("babylon： 生成 "),a("code",[t._v("AST")])]),t._v(" "),a("li",[t._v("babel-register： 注册 "),a("code",[t._v("babel")]),t._v(" 插件")]),t._v(" "),a("li",[t._v("babel-traverse： 遍历 "),a("code",[t._v("AST")]),t._v(" 树")]),t._v(" "),a("li",[t._v("babel-types： 操作 "),a("code",[t._v("AST")]),t._v(" 的工具库")])]),t._v(" "),a("p",[t._v("在这里我们需要重点了解的是 "),a("code",[t._v("babel-types")]),t._v(" 这个库，为我们封装了一套操作 "),a("code",[t._v("AST")]),t._v(" 的逻辑，为我们提供了操作 "),a("code",[t._v("AST")]),t._v(" 的基本能力。")]),t._v(" "),a("h3",{attrs:{id:"vistor-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vistor-api","aria-hidden":"true"}},[t._v("#")]),t._v(" Vistor API 🎏")]),t._v(" "),a("p",[t._v("这是我们编写插件前的最后一项理论基础了，"),a("code",[t._v("Babel")]),t._v(" 定义了 "),a("code",[t._v("visitor")]),t._v(" 对象用于插件访问生成的 "),a("code",[t._v("AST")]),t._v(" 结构。")]),t._v(" "),a("p",[t._v("在 "),a("code",[t._v("Babel")]),t._v(" 插件的世界中所有的操作都是基于这一种模式。")]),t._v(" "),a("p",[t._v("让我们先来看看教程中的一个例子：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" t "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    visitor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// visitor contents")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("div",{staticClass:"tip custom-block"},[a("p",[t._v("Babel 遍历使用深度优先算法，所以每个节点都会被访问两次。 😏")])]),t._v(" "),a("p",[t._v("插件返回的是一个 "),a("code",[t._v("Babel")]),t._v(" 的实例对象，这里为了方便我们直接使用对象结构取出 "),a("code",[t._v("babel.types")]),t._v(" 并将其重命名为 "),a("code",[t._v("t")]),t._v("，所有的操作都在 "),a("code",[t._v("visitor")]),t._v(" 中进行。")]),t._v(" "),a("p",[a("code",[t._v("visitor")]),t._v(" 中操作的对象是固定的，我们来看看具体使用场景的例子：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" t "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    visitor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Identifier")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ASTNodeTypeHere")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])]),a("p",[t._v("从这个例子可以看出，实际上 "),a("code",[t._v("visitor")]),t._v(" 是以节点名为单位对处理进行接收的，"),a("code",[t._v("Babel")]),t._v(" 会对每一个该种节点都执行函数里的操作。")]),t._v(" "),a("div",{staticClass:"tip custom-block"},[a("p",[t._v("实际生产插件应考虑作用域问题。")])]),t._v(" "),a("h2",{attrs:{id:"第一个插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一个插件","aria-hidden":"true"}},[t._v("#")]),t._v(" 第一个插件")]),t._v(" "),a("p",[t._v("基础理论就绪以后，我们可以着手编写我们的第一个插件了。")]),t._v(" "),a("h3",{attrs:{id:"环境准备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境准备","aria-hidden":"true"}},[t._v("#")]),t._v(" 环境准备 🎏")]),t._v(" "),a("p",[a("code",[t._v("Babel")]),t._v(" 官方提供了一套脚手架 "),a("code",[t._v("babel-cli")]),t._v("，通过这一脚手架和上面提到的插件，我们就搭建起了我们编写插件的基本环境了。")]),t._v(" "),a("p",[t._v("接着在 "),a("code",[t._v("node_modules")]),t._v(" 文件夹中创建一个我们插件的文件夹，安装命名规范应为 "),a("code",[t._v("babel-plugin-xxx")]),t._v("，我们这里创建一个 "),a("code",[t._v("babel-plugin-first")]),t._v(" 的文件夹，并在里面创建 "),a("code",[t._v("index.js")]),t._v(" 文件。")]),t._v(" "),a("p",[t._v("创建好了插件之后我们还需要在 "),a("code",[t._v(".babelrc")]),t._v(" 中进行配置引入插件，配置如下：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"presets"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"plugins"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"first"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("p",[t._v("这个时候我们的插件就已经应用成功啦~")]),t._v(" "),a("h3",{attrs:{id:"第一个例子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一个例子","aria-hidden":"true"}},[t._v("#")]),t._v(" 第一个例子 🎏")]),t._v(" "),a("p",[t._v("我们先来看一个我们刚才很熟悉的例子：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("这里我们起步的第一个例子就是将表达式中的 "),a("code",[t._v("const")]),t._v(" 变成 "),a("code",[t._v("var")]),t._v("。")]),t._v(" "),a("p",[t._v("我们应该怎么做呢？")]),t._v(" "),a("p",[t._v("对的，我们先把他的 "),a("code",[t._v("AST")]),t._v(" 结构打印出来看看:")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://blog-img-1252360401.cos.ap-guangzhou.myqcloud.com/20190923-6.png",alt:"AST结构"}})]),t._v(" "),a("p",[t._v("从 "),a("code",[t._v("AST")]),t._v(" 的结构可以看出，我们想要达到目的只需要将 "),a("code",[t._v("VariableDeclaration")]),t._v(" 中的 "),a("code",[t._v("const")]),t._v(" 换成 "),a("code",[t._v("var")]),t._v(" 即可，思路非常简单，我们就直接来看代码了。")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("module"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("exports")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" t "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        visitor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("VariableDeclaration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("declarations"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("kind "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'const'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("VariableDeclaration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'var'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("p",[t._v("这时使用 "),a("code",[t._v("Babel")]),t._v(" 对源代码进行编译会发现输出代码里的 "),a("code",[t._v("const")]),t._v(" 已经被全部转成 "),a("code",[t._v("var")]),t._v(" 了，以此类推我们能进行更加高级的工作。")]),t._v(" "),a("h3",{attrs:{id:"箭头函数的替换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#箭头函数的替换","aria-hidden":"true"}},[t._v("#")]),t._v(" 箭头函数的替换 🎏")]),t._v(" "),a("p",[t._v("箭头函数的替换相对比较高级，这里抽取官方库 "),a("code",[t._v("babel-plugin-transform-es2015-arrow-functions")]),t._v(" 中的代码进行学习。")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"use strict"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nexports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__esModule "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nexports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("default")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("_ref")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" t "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _ref"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("types"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    visitor"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("ArrowFunctionExpression")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ArrowFunctionExpression")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("opts"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("spec"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" node "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shadow"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n          node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shadow "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 更换节点类型")]),t._v("\n          node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"FunctionExpression"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 存储当前块级作用域 this 指向")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 绑定 this")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" boundThis "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("thisExpression")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          boundThis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_forceShadow "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 生成块级作用域")]),t._v("\n          path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ensureBlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 插入节点")]),t._v("\n          path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("get")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"body"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("unshiftContainer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"body"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("expressionStatement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callExpression")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("addHelper")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"newArrowCheck"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("thisExpression")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" boundThis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 替换节点")]),t._v("\n          path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceWith")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callExpression")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("memberExpression")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("identifier")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bind"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("thisExpression")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("arrowFunctionToShadowed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nmodule"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" exports"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"default"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br"),a("span",{staticClass:"line-number"},[t._v("40")]),a("br")])]),a("p",[t._v("关键代码解析：")]),t._v(" "),a("div",{staticClass:"language-javascript line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 插入元素")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果没有传参则默认插入在 body 下")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ensureBlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("node")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" key "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"body"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toBlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 插入影子函数节点")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 默认编译成函数节点")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("arrowFunctionToShadowed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isArrowFunctionExpression")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ensureBlock")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" node "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n  node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("expression "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("type "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"FunctionExpression"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shadow "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("shadow "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("||")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br")])]),a("h2",{attrs:{id:"结语"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#结语","aria-hidden":"true"}},[t._v("#")]),t._v(" 结语")]),t._v(" "),a("p",[a("code",[t._v("Babel")]),t._v(" 是前端工程狮们往底层进军的第一步，远离搬砖从学习 "),a("code",[t._v("AST")]),t._v(" 开始。")]),t._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料","aria-hidden":"true"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.babeljs.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Babel中文网"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/jamiebuilds/babel-handbook/blob/master/translations/zh-Hans/plugin-handbook.md#toc-writing-your-first-babel-plugin",target:"_blank",rel:"noopener noreferrer"}},[t._v("Babel插件指南"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000016231512?utm_source=tag-newest",target:"_blank",rel:"noopener noreferrer"}},[t._v("AST"),a("OutboundLink")],1)])])])},[],!1,null,null,null);s.default=e.exports}}]);